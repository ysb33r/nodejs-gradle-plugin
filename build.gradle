plugins {
    id 'groovy'
    id 'org.ysb33r.gradletest' version '1.0-beta7'
    id 'org.asciidoctor.convert' version '1.5.3'
    id 'com.gradle.plugin-publish' version '0.9.4'
    id 'com.github.hierynomus.license' version '0.14.0'
    id 'net.ossindex.audit' version '0.1.1'
}

version = '0.1-SNAPSHOT'
group = 'org.ysb33r.gradle'

ext {
    spockGroovyVer = GroovySystem.version.replaceAll(/\.\d+$/,'')
    notSnapshot = { !version.endsWith('-SNAPSHOT') }
}

apply from : 'gradle/download-tests.gradle'

repositories {
    jcenter()

    if(!notSnapshot()) {
        mavenLocal()
    }

    ivy {
        name 'Downloader for NodeJS distributions under test'
        url 'https://nodejs.org/dist'
        resolve.dynamicMode = false
        layout 'pattern', {
            artifact 'v[revision]/[artifact]-v[revision]-[classifier].[ext]'
        }
    }

    ivy {
        name 'Downloader for NPM packages under test'
        url 'https://registry.npmjs.org'
        resolve.dynamicMode = false
        layout 'pattern', {
            artifact '[artifact]/-/[artifact]-[revision].[ext]'
        }
    }
}


dependencies {
    compile localGroovy()
    compile gradleApi()
    compile 'org.ysb33r.gradle:grolifant:0.3-SNAPSHOT'

    testCompile ("org.spockframework:spock-core:1.0-groovy-${spockGroovyVer}") {
        exclude module : 'groovy-all'
    }
    testCompile gradleTestKit()

}

gradleTest {
    // tag::gradleTestVersions[]
    versions '2.5', '2.14', '3.0', '3.5', '4.0'
    // end::gradleTestVersions[]
}

license {
    header = rootProject.file('config/HEADER')
    strictCheck = true
    ignoreFailures = false
    mapping {
        groovy ='DOUBLESLASH_STYLE'
    }
    ext.year = '2017'
    excludes([
            '**/*.adoc', '**/*.md',
            '**/*.properties',
            '**/*CompatibilitySpec.groovy'
    ])
}

task landingPage( type :  org.asciidoctor.gradle.AsciidoctorTask )
apply from : 'gradle/build-documentation.gradle'

apply from : 'gradle/publish-plugins.gradle'

task release {
    group "Release"
    description "Lifecycle task for release a new version"
    onlyIf notSnapshot
    onlyIf {!gradle.startParameter.offline}
    dependsOn build, publishPlugins, installDocs
}

